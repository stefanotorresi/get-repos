#!/usr/bin/env python
import re
from github import Github
from tempfile import gettempdir
from beaker.cache import CacheManager
from beaker.util import parse_cache_config_options

cache_dir = '%s/%s/cache' % (gettempdir(), __file__)

cache_opts = {
    'cache.type': 'file',
    'cache.data_dir': cache_dir + '/data',
    'cache.lock_dir': cache_dir + '/lock',
    'cache.expire': 3600
}

cache_manager = CacheManager(**parse_cache_config_options(cache_opts))


@cache_manager.cache('repos')
def get_repos(org_name):
    github = Github()
    org = github.get_organization(org_name)
    return [repo for repo in org.get_repos()]  # iterate to execute http requests


def get_repo_names(org_name, pattern=None):
    repos = get_repos(org_name)
    names = [repo.name for repo in repos if re.search(pattern, repo.name)]
    names.sort()
    return names


def main():
    import sys
    from argparse import ArgumentParser

    parser = ArgumentParser(
        description='List public repos of a Github organization.'
    )
    parser.add_argument(
        'org_name',
        metavar='ORG',
        help='the name of the organization'
    )
    parser.add_argument(
        '-p, --pattern',
        dest='pattern',
        metavar='PATTERN',
        nargs='?',
        help='a regex pattern to match repo names against',
        default='.*'
    )
    parser.add_argument(
        '-f, --format',
        dest='format',
        metavar='FORMAT',
        nargs='?',
        help='the output format for each line',
        default='%s'
    )

    args = parser.parse_args()

    if args.format.count('%s') != 1:
        print "FORMAT must contain exactly one '%s' placeholder"
        sys.exit(1)

    for name in get_repo_names(args.org_name, args.pattern):
        print args.format % name


if __name__ == "__main__":
    main()
